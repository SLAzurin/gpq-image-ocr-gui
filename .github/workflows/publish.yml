name: Publish GPQ Image OCR GUI

on:
  push:
    branches:
      - "*"
      - "**/*"
    tags:
      - "v*.*.*"

permissions:
  contents: write

env:
  GPQ_CLI_VERSION: v1.2.0

jobs:
  check-gpq-cli:
    outputs:
      cache-hit: ${{ steps.check-gpq-cli-build.outputs.cache-hit }}
    defaults:
      run:
        shell: pwsh
    runs-on: windows-latest

    steps:
      - name: Check gpq cli build
        id: check-gpq-cli-build
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: false
          lookup-only: true
          key: ${{ runner.os }}-gpq-cli-${{ env.GPQ_CLI_VERSION }}
          path: ./gpq

  build-gpq-cli:
    if: needs.check-gpq-cli.outputs.cache-hit == false
    defaults:
      run:
        shell: pwsh
    runs-on: windows-latest
    needs: check-gpq-cli

    steps:
      - uses: actions/checkout@v4
        with:
          repository: "SLAzurin/gpq-image-ocr"
          ref: "${{ env.GPQ_CLI_VERSION }}"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Validate py313 with black
        run: |
          black --target-version=py313 ./gpq.py
      - name: Build app
        run: |
          pyinstaller gpq.py
          Move-Item dist/gpq .
      - name: Cache gpq cli
        uses: actions/cache/save@v4
        with:
          path: ./gpq
          key: ${{ runner.os }}-gpq-cli-${{ env.GPQ_CLI_VERSION }}

  build-gpq-ui:
    needs:
      - build-gpq-cli
    if: always()
    defaults:
      run:
        shell: pwsh
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: Cache gpq cli
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: true
          path: ./gpq
          key: ${{ runner.os }}-gpq-cli-${{ env.GPQ_CLI_VERSION }}
      - name: Verify gpq cli
        run: if (![System.IO.File]::Exists('gpq/gpq.exe')) { exit 1; }
      - uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"
      - name: Install dependencies
        run: |
          pnpm i --frozen-lockfile
      - name: Restore electron cache
        id: restore-electron-cache
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: false
          path: ./.cache
          key: ${{ runner.os }}-gpq-cli-electron-cache-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Build
        env:
          ELECTRON_CACHE: ./.cache/electron
          ELECTRON_BUILDER_CACHE: ./.cache/electron-builder
        run: |
          pnpm run build
      - name: Save electron cache
        uses: actions/cache/save@v4
        if: ${{ !steps.restore-electron-cache.outputs.cache-hit }}
        with:
          path: ./.cache
          key: ${{ runner.os }}-gpq-cli-electron-cache-${{ hashFiles('pnpm-lock.yaml') }}
      - name: Release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          draft: false
          files: |
            release/latest.yml
            release/GPQ Image OCR GUI-Windows-*-Setup.exe.blockmap
            release/GPQ Image OCR GUI-Windows-*-Setup.exe
          fail_on_unmatched_files: true
